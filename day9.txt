class Solution:
    def myAtoi(self, s: str) -> int:

        s = s.strip()
        if len(s) == 0 : return 0

        sign = 1 
        res = 0

        if s[0] == "-":
            sign = -1 
        elif s[0] == "+":
            sign = 1 
        elif not s[0].isnumeric():
            return 0
        else:
            res = res * 10 + int(s[0])
        
        for i in range(1, len(s)):
            if s[i].isnumeric():
                res = res * 10 + int(s[i])
            else:
                break
        
        if sign == 1:
            res = min(res, 2**31 - 1)
        else:
            res = min(res, 2**31)
        
        return res * sign
    
==========================
JAVA
==========================
class Solution {
    public int myAtoi(String s) {
        s = s.trim();
        if (s.length() == 0) return 0;
        
        int sign = 1;
        int res = 0;
        
        if (s.charAt(0) == '-') {
            sign = -1;
        } else if (s.charAt(0) == '+') {
            sign = 1;
        } else if (!Character.isDigit(s.charAt(0))) {
            return 0;
        } else {
            res = res * 10 + Character.getNumericValue(s.charAt(0));
        }
        
        for (int i = 1; i < s.length(); i++) {
            if (Character.isDigit(s.charAt(i))) {
                res = res * 10 + Character.getNumericValue(s.charAt(i));
            } else {
                break;
            }
        }
        
        if (sign == 1) {
            res = Math.min(res, Integer.MAX_VALUE);
        } else {
            res = Math.min(res, Integer.MAX_VALUE);
        }
        
        return res * sign;
    }
}